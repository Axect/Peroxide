[package]
name = "peroxide"
version = "0.40.0"
authors = ["axect <axect@outlook.kr>"]
edition = "2018"
description = "Rust comprehensive scientific computation library contains linear algebra, numerical analysis, statistics and machine learning tools with farmiliar syntax"
repository = "https://github.com/Axect/Peroxide"
license = "MIT OR Apache-2.0"
categories = ["science"]
readme = "README.md"
documentation = "https://axect.github.io/Peroxide_Doc"
keywords = ["Numeric", "Science", "Dataframe", "Plot", "LinearAlgebra"]
exclude = [
  "example_data/",
  "src/bin/",
  "benches/",
  "examples/",
  "test_data/",
  "peroxide-ad2",
]

[badges]
travis-ci = { repository = "axect/peroxide" }
maintenance = { status = "actively-developed" }

[dev-dependencies]
float-cmp = "0.10"
criterion = { version = "0.5.1", features = ["html_reports"] }

[dependencies]
csv = { version = "1.3", optional = true, default-features = false }
rand = { version = "0.9", features = ["small_rng"] }
rand_distr = "0.5"
order-stat = "0.1"
puruspe = "0.4"
matrixmultiply = { version = "0.3", features = ["threading"] }
peroxide-ad = "0.3"
peroxide-num = "0.1"
anyhow = "1.0"
paste = "1.0"
netcdf = { version = "0.7", optional = true, default-features = false }
pyo3 = { version = "0.22", optional = true, features = [
  "auto-initialize",
  "gil-refs",
] }
blas = { version = "0.22", optional = true }
lapack = { version = "0.19", optional = true }
serde = { version = "1.0", features = ["derive"], optional = true }
rkyv = { version = "0.8", optional = true }
json = { version = "0.12", optional = true }
parquet = { version = "55", features = ["arrow", "snap"], optional = true }
arrow = { version = "55", optional = true }
indexmap = { version = "1", optional = true }
num-complex = { version = "0.4", optional = true }
rayon = { version = "1.10", optional = true }

[package.metadata.docs.rs]
rustdoc-args = ["--html-in-header", "katex-header.html", "--cfg", "docsrs"]

[features]
default = []
O3 = ["blas", "lapack"]
plot = ["pyo3"]
nc = ["netcdf"]
parquet = ["dep:parquet", "arrow", "indexmap"]
complex = ["num-complex", "matrixmultiply/cgemm"]
parallel = ["rayon"]
